public class RandomMapGenerator {
    private static final int NUM_CITIES = 100;
    private static final int MAX_NATIONAL_HIGHWAYS = 4;
    private static final Random random = new Random();

    public static void main(String[] args) {
        List<City> cities = generateCities(NUM_CITIES);
        List<Road> roads = generateRoads(cities);

        printCities(cities);
        printRoads(roads);

        visualizeGraph(cities, roads);
    }

    private static List<City> generateCities(int numCities) {
        List<City> cities = new ArrayList<>();
        for (int i = 0; i < numCities; i++) {
            String name = "City" + (i + 1);
            double latitude = random.nextDouble() * 180 - 90; // Random latitude between -90 and 90
            double longitude = random.nextDouble() * 360 - 180; // Random longitude between -180 and 180
            cities.add(new City(name, latitude, longitude));
        }
        return cities;
    }

    private static List<Road> generateRoads(List<City> cities) {
        List<Road> roads = new ArrayList<>();
        Set<City> connectedCities = new HashSet<>();
        
       
        for (City city : cities) {
            if (connectedCities.isEmpty()) {
                // Connect the first city to itself (loopback to start the process)
                connectedCities.add(city);
            } else {
                City otherCity = getRandomCity(connectedCities);
                int lanes = random.nextInt(4) + 1; // Random number of lanes between 1 and 4
                roads.add(new Road(city, otherCity, lanes));
                connectedCities.add(city);
            }
        }

     
        for (int i = 0; i < MAX_NATIONAL_HIGHWAYS; i++) {
            City city1 = getRandomCity(cities);
            City city2 = getRandomCity(cities);
            if (!city1.equals(city2)) {
                roads.add(new Road(city1, city2, 4)); // National Highway
            }
        }

        for (City city : cities) {
            City otherCity = getRandomCity(cities);
            if (!city.equals(otherCity)) {
                roads.add(new Road(city, otherCity, 3)); // Inter-State Highway
            }
        }

        for (City city : cities) {
            City otherCity = getRandomCity(cities);
            if (!city.equals(otherCity)) {
                roads.add(new Road(city, otherCity, 2)); // Highway
            }
        }

      
        for (City city : cities) {
            City otherCity = getRandomCity(cities);
            if (!city.equals(otherCity)) {
                roads.add(new Road(city, otherCity, 1)); //
